{"version":3,"file":"static/js/167.6ca8052f.chunk.js","mappings":"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","sources":["components/piping/pipe/WeightCalc.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst WeightCalc = ({ title, description }) => {\r\n  const [Od, setOd] = useState(\"\");\r\n  const [Thk, setThk] = useState(\"\");\r\n  const [Ro, setRo] = useState(\"\");\r\n  const [FRo, setFRo] = useState(\"\");\r\n  const [emptyweight, setWeight] = useState(null);\r\n  const [fullweight, setFWeight] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [inputErrors, setInputErrors] = useState({\r\n    Od: false,\r\n    Thk: false,\r\n    Ro: false,\r\n    FRo: false,\r\n  });\r\n\r\n  const handleCalculate = () => {\r\n    // Reset error message and input errors\r\n    setErrorMessage(\"\");\r\n    setInputErrors({ Od: false, Thk: false, Ro: false, FRo: false });\r\n\r\n    // Validate inputs\r\n    const isOdValid = !isNaN(parseFloat(Od)) && Od.trim() !== \"\";\r\n    const isThkValid = !isNaN(parseFloat(Thk)) && Thk.trim() !== \"\";\r\n    const isRoValid = !isNaN(parseFloat(Ro)) && Ro.trim() !== \"\";\r\n    const isFRoValid = !isNaN(parseFloat(FRo)) && FRo.trim() !== \"\";\r\n\r\n    if (isOdValid && isThkValid && isRoValid && isFRoValid) {\r\n      // Convert inputs to numbers and calculate weight\r\n      const weightValue = (\r\n        ((parseFloat(Od) * parseFloat(Thk) -\r\n          parseFloat(Thk) * parseFloat(Thk)) /\r\n          1000000) *\r\n        parseFloat(Ro) *\r\n        Math.PI // Use Math.PI for a more precise value of π\r\n      ).toFixed(2);\r\n      setWeight(weightValue);\r\n\r\n      const fweightValue = (\r\n        (((((parseFloat(Od) - 2 * parseFloat(Thk)) *\r\n          (parseFloat(Od) - 2 * parseFloat(Thk))) /\r\n          1000000) *\r\n          parseFloat(FRo)) /\r\n          4) *\r\n        Math.PI\r\n      ).toFixed(2);\r\n      setFWeight(fweightValue);\r\n    } else {\r\n      setErrorMessage(\"Please Fill Empty Fields\");\r\n\r\n      // Set which inputs are invalid\r\n      setInputErrors({\r\n        Od: !isOdValid,\r\n        Thk: !isThkValid,\r\n        Ro: !isRoValid,\r\n        FRo: !isFRoValid,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    // Reset weight and error message when any input changes\r\n    setWeight(null);\r\n    setFWeight(null);\r\n    setErrorMessage(\"\");\r\n\r\n    // Handle input change\r\n    switch (e.target.name) {\r\n      case \"Od\":\r\n        setOd(e.target.value);\r\n        break;\r\n      case \"Thk\":\r\n        setThk(e.target.value);\r\n        break;\r\n      case \"Ro\":\r\n        setRo(e.target.value);\r\n        break;\r\n      case \"FRo\":\r\n        setFRo(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"mb-4\">{title || \"Pipe Weight Calculator\"}</h2> {/* Display title */}\r\n      <p>{description || \"Calculate the weight of a pipe based on its dimensions and material density.\"}</p> {/* Display description */}\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">\r\n          Pipe Outside Diameter (mm):\r\n          <input\r\n            type=\"number\"\r\n            className={`form-control text-center ${\r\n              inputErrors.Od ? \"border-danger bg-light-danger\" : \"\"\r\n            }`}\r\n            name=\"Od\"\r\n            value={Od}\r\n            onChange={handleChange}\r\n            style={inputErrors.Od ? { backgroundColor: \"#f8d7da\" } : {}}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">\r\n          Pipe Wall Thickness (mm):\r\n          <input\r\n            type=\"number\"\r\n            className={`form-control text-center ${\r\n              inputErrors.Thk ? \"border-danger bg-light-danger\" : \"\"\r\n            }`}\r\n            name=\"Thk\"\r\n            value={Thk}\r\n            onChange={handleChange}\r\n            style={inputErrors.Thk ? { backgroundColor: \"#f8d7da\" } : {}}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">\r\n          Pipe Material Density (kg/m³):\r\n          <input\r\n            type=\"number\"\r\n            className={`form-control text-center ${\r\n              inputErrors.Ro ? \"border-danger bg-light-danger\" : \"\"\r\n            }`}\r\n            name=\"Ro\"\r\n            value={Ro}\r\n            onChange={handleChange}\r\n            style={inputErrors.Ro ? { backgroundColor: \"#f8d7da\" } : {}}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">\r\n          Fluid Density (kg/m³):\r\n          <input\r\n            type=\"number\"\r\n            className={`form-control text-center ${\r\n              inputErrors.FRo ? \"border-danger bg-light-danger\" : \"\"\r\n            }`}\r\n            name=\"FRo\"\r\n            value={FRo}\r\n            onChange={handleChange}\r\n            style={inputErrors.FRo ? { backgroundColor: \"#f8d7da\" } : {}}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button className=\"btn btn-primary mb-3\" onClick={handleCalculate}>\r\n        Calculate Weight\r\n      </button>\r\n      {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n      {emptyweight !== null && (\r\n        <p className=\"result-text\">\r\n          The Empty Pipe weight per Length is: <strong>{emptyweight}</strong>{\" \"}\r\n          kg/m\r\n        </p>\r\n      )}\r\n      {fullweight !== null && (\r\n        <p className=\"result-text\">\r\n          The Fluid Weight Inside the Pipe per Length is:{\" \"}\r\n          <strong>{fullweight}</strong> kg/m\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeightCalc;\r\n"],"names":["_ref","title","description","Od","setOd","useState","Thk","setThk","Ro","setRo","FRo","setFRo","emptyweight","setWeight","fullweight","setFWeight","errorMessage","setErrorMessage","inputErrors","setInputErrors","handleChange","e","target","name","value","_jsxs","className","children","_jsx","type","onChange","style","backgroundColor","onClick","handleCalculate","isOdValid","isNaN","parseFloat","trim","isThkValid","isRoValid","isFRoValid","weightValue","Math","PI","toFixed","fweightValue"],"sourceRoot":""}