{"version":3,"file":"static/js/40.f93207bb.chunk.js","mappings":"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","sources":["components/piping/pipe/PipeData.jsx","webpack://fe/./src/components/piping/pipe/PipeData.css?93f6"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PipeData.css\";\r\nimport pipeImage from \"./Pipe.png\";\r\n\r\nconst PipeData = ({ title, description, apiLink }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n  const [npsOptions, setNpsOptions] = useState([]);\r\n  const [schOptions, setSchOptions] = useState([]);\r\n  const [selectedNps, setSelectedNps] = useState(\"\");\r\n  const [selectedSch, setSelectedSch] = useState(\"\");\r\n\r\n  const decimalToFraction = (decimal) => {\r\n    const fractionMap = {\r\n      \"0.125\": \"1/8\",\r\n      \"0.250\": \"1/4\",\r\n      \"0.375\": \"3/8\",\r\n      \"0.500\": \"1/2\",\r\n      \"0.625\": \"5/8\",\r\n      \"0.750\": \"3/4\",\r\n      \"0.875\": \"7/8\",\r\n    };\r\n\r\n    const wholeNumber = Math.floor(decimal);\r\n    const fraction = decimal - wholeNumber;\r\n\r\n    if (fraction === 0) return wholeNumber.toString();\r\n\r\n    const fractionString = fractionMap[fraction.toFixed(3)];\r\n\r\n    return wholeNumber === 0\r\n      ? fractionString || `${fraction.toFixed(3)} (not in map)` // Handle unknown fractions\r\n      : `${wholeNumber} ${fractionString || `${fraction.toFixed(3)} (not in map)`}`; // Handle unknown fractions\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!apiLink) {\r\n      console.warn(\"API link is missing, skipping data fetch.\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get(apiLink)\r\n      .then((response) => {\r\n        const data = response.data.map((project) => ({\r\n          ...project,\r\n          NPS: parseFloat(project.NPS).toString(), // Ensure NPS is a string representation of a number\r\n          Sch: project.Sch.toString(),\r\n        }));\r\n        setProjects(data);\r\n        setFilteredProjects(data);\r\n\r\n        const nps = [...new Set(data.map((project) => project.NPS))]\r\n          .sort((a, b) => parseFloat(a) - parseFloat(b));\r\n        setNpsOptions(nps);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, [apiLink]);\r\n\r\n  useEffect(() => {\r\n    let filtered = projects;\r\n    if (selectedNps) {\r\n      filtered = filtered.filter((project) => project.NPS === selectedNps);\r\n      const sch = [...new Set(filtered.map((project) => project.Sch))]\r\n        .sort((a, b) => parseFloat(a) - parseFloat(b));\r\n      setSchOptions(sch);\r\n    } else {\r\n      setSchOptions([]);\r\n    }\r\n\r\n    if (selectedSch) {\r\n      filtered = filtered.filter((project) => project.Sch === selectedSch);\r\n    }\r\n\r\n    setFilteredProjects(filtered);\r\n  }, [selectedNps, selectedSch, projects]);\r\n\r\n  const getSelectedDn = () => {\r\n    const project = projects.find(\r\n      (p) => p.NPS === selectedNps && p.Sch === selectedSch\r\n    );\r\n    return project ? project.DN : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{title || \"No Title Provided\"}</h1>\r\n      <h2>{description || \"No Description Provided\"}</h2>\r\n      <br />\r\n      <br />\r\n      <div className=\"filters\">\r\n        <label className=\"dropdown-label\">\r\n          NPS:&ensp;\r\n          <select\r\n            value={selectedNps}\r\n            onChange={(e) => {\r\n              setSelectedNps(e.target.value);\r\n              setSelectedSch(\"\"); // Reset Sch selection when NPS changes\r\n            }}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {npsOptions.map((nps) => (\r\n              <option key={nps} value={nps}>\r\n                {decimalToFraction(parseFloat(nps))}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label className=\"dropdown-label\">\r\n          Sch:&ensp;\r\n          <select\r\n            value={selectedSch}\r\n            onChange={(e) => setSelectedSch(e.target.value)}\r\n            disabled={!selectedNps}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {schOptions.map((sch) => (\r\n              <option key={sch} value={sch}>\r\n                {sch}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      {selectedNps && selectedSch && (\r\n        <div className=\"project-details\">\r\n          <hr />\r\n          <br />\r\n          <h4>\r\n            Size: {decimalToFraction(parseFloat(selectedNps))}\" (DN\r\n            {getSelectedDn()}), Sch: {selectedSch}\r\n          </h4>\r\n          {filteredProjects.map((project) => (\r\n            <div\r\n              key={`${project.NPS}-${project.Sch}-${project.OD}`}\r\n              className=\"project\"\r\n            >\r\n              <hr />\r\n              <table className=\"specs-table\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>OD:</strong> {project.OD} mm{\" \"}\r\n                    </td>\r\n                    <td>\r\n                      <strong>ID:</strong>{\" \"}\r\n                      {(project.OD - project.Thk * 2).toFixed(2)} mm{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <strong>Thk:</strong> {project.Thk} mm{\" \"}\r\n                    </td>\r\n                    <td>\r\n                      <strong>Weight:</strong> {project.Weight} kg/m{\" \"}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n        <img\r\n          src={pipeImage}\r\n          alt=\"Pipe illustration\"\r\n          style={{\r\n            width: \"50%\",\r\n            borderRadius: \"15px\",\r\n            boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PipeData;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_ref","title","description","apiLink","projects","setProjects","useState","filteredProjects","setFilteredProjects","npsOptions","setNpsOptions","schOptions","setSchOptions","selectedNps","setSelectedNps","selectedSch","setSelectedSch","decimalToFraction","decimal","wholeNumber","Math","floor","fraction","toString","fractionString","toFixed","useEffect","axios","get","then","response","data","map","project","NPS","parseFloat","Sch","nps","Set","sort","a","b","catch","error","console","warn","filtered","filter","sch","_jsxs","className","children","_jsx","value","onChange","e","target","disabled","getSelectedDn","find","p","DN","OD","Thk","Weight","style","textAlign","marginTop","src","pipeImage","alt","width","borderRadius","boxShadow"],"sourceRoot":""}