{"version":3,"file":"static/js/376.de4d2b0c.chunk.js","mappings":"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","sources":["components/piping/flange/FlgData.jsx","webpack://fe/./src/components/piping/flange/FlgData.css?facf"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./FlgData.css\";\r\nimport FlgImage from \"./Flg.png\";\r\n\r\nconst FlgData = ({ title, description, apiLink }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n  const [typeOptions, setTypeOptions] = useState([]);\r\n  const [pclOptions, setPclOptions] = useState([]);\r\n  const [npsOptions, setNpsOptions] = useState([]);\r\n  const [selectedType, setSelectedType] = useState(\"\");\r\n  const [selectedPcl, setSelectedPcl] = useState(\"\");\r\n  const [selectedNps, setSelectedNps] = useState(\"\");\r\n\r\n  const decimalToFraction = (decimal) => {\r\n    const fractionMap = {\r\n      \"0.125\": \"1/8\",\r\n      \"0.250\": \"1/4\",\r\n      \"0.375\": \"3/8\",\r\n      \"0.500\": \"1/2\",\r\n      \"0.625\": \"5/8\",\r\n      \"0.750\": \"3/4\",\r\n      \"0.875\": \"7/8\",\r\n    };\r\n    const wholeNumber = Math.floor(decimal);\r\n    const fraction = decimal - wholeNumber;\r\n    if (fraction === 0) return wholeNumber.toString();\r\n    const fractionString = fractionMap[fraction.toFixed(3)];\r\n    return wholeNumber === 0\r\n      ? fractionString || `${fraction.toFixed(3)} (not in map)`\r\n      : `${wholeNumber} ${fractionString || `${fraction.toFixed(3)} (not in map)`}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!apiLink) {\r\n      console.warn(\"API link is missing, skipping data fetch.\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get(apiLink)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        setProjects(data);\r\n        setFilteredProjects(data);\r\n\r\n        const types = [...new Set(data.map((item) => item.Type))];\r\n        setTypeOptions(types);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, [apiLink]);\r\n\r\n  useEffect(() => {\r\n    let filtered = projects;\r\n\r\n    if (selectedType) {\r\n      filtered = filtered.filter((project) => project.Type === selectedType);\r\n      const pcl = [...new Set(filtered.map((project) => project.PCL))];\r\n      setPclOptions(pcl);\r\n    } else {\r\n      setPclOptions([]);\r\n    }\r\n\r\n    if (selectedPcl) {\r\n      filtered = filtered.filter((project) => project.PCL === selectedPcl);\r\n      const nps = [...new Set(filtered.map((project) => project.NPS))];\r\n      setNpsOptions(nps);\r\n    } else {\r\n      setNpsOptions([]);\r\n    }\r\n\r\n    if (selectedNps) {\r\n      filtered = filtered.filter((project) => project.NPS === selectedNps);\r\n    }\r\n\r\n    setFilteredProjects(filtered);\r\n  }, [selectedType, selectedPcl, selectedNps, projects]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{title || \"No Title Provided\"}</h1>\r\n      <h2>{description || \"No Description Provided\"}</h2>\r\n      <br />\r\n      <div className=\"filters\">\r\n        <label className=\"dropdown-label\">\r\n          Type:&ensp;\r\n          <select\r\n            value={selectedType}\r\n            onChange={(e) => {\r\n              setSelectedType(e.target.value);\r\n              setSelectedPcl(\"\");\r\n              setSelectedNps(\"\");\r\n            }}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {typeOptions.map((type) => (\r\n              <option key={type} value={type}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label className=\"dropdown-label\">\r\n          PCL:&ensp;\r\n          <select\r\n            value={selectedPcl}\r\n            onChange={(e) => {\r\n              setSelectedPcl(e.target.value);\r\n              setSelectedNps(\"\");\r\n            }}\r\n            disabled={!selectedType}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {pclOptions.map((pcl) => (\r\n              <option key={pcl} value={pcl}>\r\n                {pcl}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label className=\"dropdown-label\">\r\n          NPS:&ensp;\r\n          <select\r\n            value={selectedNps}\r\n            onChange={(e) => setSelectedNps(e.target.value)}\r\n            disabled={!selectedPcl}\r\n          >\r\n            <option value=\"\">Please select...</option>\r\n            {npsOptions.map((nps) => (\r\n              <option key={nps} value={nps}>\r\n                {decimalToFraction(parseFloat(nps))}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      {selectedType && selectedPcl && selectedNps && filteredProjects.length > 0 && (\r\n        <div className=\"project-details\">\r\n          <hr />\r\n          <br />\r\n          {filteredProjects.map((project) => (\r\n            <div key={project.id} className=\"project\">\r\n              <hr />\r\n              <table className=\"specs-table\">\r\n                <tbody>\r\n                  {Object.entries(project)\r\n                    .filter(([key, value]) => value !== \"\" && ![\"id\", \"Type\", \"PCL\", \"NPS\"].includes(key))\r\n                    .map(([key, value]) => (\r\n                      <tr key={key}>\r\n                        <td>\r\n                          <strong>{key}:</strong> {value}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n        <img\r\n          src={FlgImage}\r\n          alt=\"Pipe illustration\"\r\n          style={{\r\n            width: \"50%\",\r\n            borderRadius: \"15px\",\r\n            boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlgData;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_ref","title","description","apiLink","projects","setProjects","useState","filteredProjects","setFilteredProjects","typeOptions","setTypeOptions","pclOptions","setPclOptions","npsOptions","setNpsOptions","selectedType","setSelectedType","selectedPcl","setSelectedPcl","selectedNps","setSelectedNps","decimalToFraction","decimal","wholeNumber","Math","floor","fraction","toString","fractionString","toFixed","useEffect","axios","get","then","response","data","types","Set","map","item","Type","catch","error","console","warn","filtered","filter","project","pcl","PCL","nps","NPS","_jsxs","className","children","_jsx","value","onChange","e","target","type","disabled","parseFloat","length","Object","entries","_ref2","key","includes","_ref3","id","style","textAlign","marginTop","src","FlgImage","alt","width","borderRadius","boxShadow"],"sourceRoot":""}